import{_ as l,u as d,d as s,C as c,r as i,o as h,c as m,h as u,k as p,b as P,a as f}from"./index-f0d66ea3.js";const _={data(){const{t}=d();return{status:t("common.maintenance"),loading:t("common.loading"),balanceList:[],headers:[{text:"Product Name",value:"ProductName"},{text:"Balance",value:"ProductWalletBalance"}],headers2:{"X-Member-Details":s.defaults.headers.common["X-Member-Details"]},show:!1}},created(){s.defaults.headers.common["X-Member-Details"]=c.AES.decrypt(sessionStorage.getItem("memDetail"),this.aesKey).toString(c.enc.Utf8),this.GetProductWalletDetails()},methods:{GetProductWalletDetails(){s.get("GetProductWalletDetails",{},this.headers2).then(t=>{t.data.ResponseCode=="0"&&(t.data.ProductList.forEach(e=>{this.balanceList.push({ProductName:e.ProductName,ProductCode:e.ProductCode,IsSeamless:e.IsSeamless,IsMaintenance:e.IsMaintenance,ProductWalletBalance:this.loading})}),this.balanceList.forEach(e=>{this.getProductBalance(e.ProductCode,e.IsSeamless,e.IsMaintenance).then(a=>{e.ProductWalletBalance=a})}),this.show=!0)}).catch(t=>{console.error(t)})},async getProductBalance(t,e,o){const a=await s.post("GetBalance?productCode="+t+"&isSeamless="+e+"&isMaintenance="+o,{},this.headers2);return a.data=="9999"||a.data=="null"?this.status:a.data}},components:{}},b={class:"container px-5 my-5"};function B(t,e,o,a,n,D){const r=i("EasyDataTable");return h(),m("div",b,[u(P("div",null,[f(r,{headers:n.headers,items:n.balanceList},null,8,["headers","items"])],512),[[p,n.show]])])}const S=l(_,[["render",B]]);export{S as default};
